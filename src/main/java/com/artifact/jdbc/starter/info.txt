Транзакция - единица работы в рамках соединения с базой данных. Другими словами,чтобы выполнить любой запрос в БД нам нужно открыть
            транзакцию, выполнить запрос и закрыть ее. Но если у нас появляется какая-то ошибка во время выполнения, то мы должны сделать
            rollback; Следовательно у транзакции есть только два состояни:

     - commit - когда запрос выполняется полностью;
     - rollback - польностью все откатывается;

  Это значит, что транзакции атомарны - либо выполняются все запросы в текущей транзакции, либо не выполняется ни одного.

Batch запрос:
        Представим, что у нас есть 4 разных запроса для разых таблиц. Мы создаем Connection и preparedStatement для каждого sql и выполняем
        execute(). execute() начинает отправлять наши запросы по очереди в базу данных расположенную, например, на другой машине где-то
        далеко. Следовательно нашу строку нужно передавать по каким-то проводам или интернет. Мы отправляем один запрос в базу и нам
        возвращается ответ. Далее мы отправляем следующий запрос используя это же соединение. И так пока не отправим все 4 запроса. По сути
        мы выполнили 4 разных запроса и 4 разных транзакции. Более того, мы 4 раза сходили на другую машину в БД. Эти походы заняли какое-то
         время. А мы хотели бы открыть одну транзакуию, выполнить все 4 запроса и вернуться с ними. Для этого и используются Batch-запросы.

Blob - binaryLargeObject - бинарный большой объект
Clob - characterLargeObject - символьный большой объект
        Не во всех БД есть такие типы, например в postgreSQL аналог:
                                                            blob - bytea
                                                            clob - text

        Для Blob и clob нужно открывать и закрывать трензакции. Но у postgres свои типы данных на этот счет, поэтому можно не делать этого.

 DAO - Data Access Object - объект доступа к данным. Это Джава-Объект и он нужен для взаимодействия между БД и сущносятми - Entity.